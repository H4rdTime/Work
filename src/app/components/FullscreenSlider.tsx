'use client'
import { Swiper, SwiperSlide } from 'swiper/react'
import { Autoplay, EffectFade, Navigation, Pagination } from 'swiper/modules'
import 'swiper/css'
import 'swiper/css/effect-fade'
import 'swiper/css/navigation'
import 'swiper/css/pagination'
import Image from 'next/image'
import { FiCheckCircle, FiArrowDown } from 'react-icons/fi'

const cities = [
  '–ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫', '–ö–æ–Ω–¥–æ–ø–æ–≥–∞', '–ú–µ–¥–≤–µ–∂—å–µ–≥–æ—Ä—Å–∫',
  '–ü—Ä—è–∂–∞', '–®—É—è', '–î–µ—Ä–µ–≤—è–Ω–Ω–æ–µ',
  '–°–æ—Ä—Ç–∞–≤–∞–ª–∞', '–õ–∞—Ö–¥–µ–Ω–ø–æ—Ö—å—è', '–ü–∏—Ç–∫—è—Ä–∞–Ω—Ç–∞',
  '–û–ª–æ–Ω–µ—Ü', '–°—É–æ—è—Ä–≤–∏', '–°–µ–≥–µ–∂–∞'
];

const FullscreenSlider = ({ scrollToForm }: { scrollToForm: () => void }) => {
  return (
    <div className="relative">
      <Swiper
        modules={[Autoplay, EffectFade, Navigation, Pagination]}
        effect="fade"
        speed={1200}
        navigation
        pagination={{ clickable: true }}
        autoplay={{ delay: 10000, pauseOnMouseEnter: true }}
        className="h-screen w-full"
      >
        {/* –°–ª–∞–π–¥ 1: –ì–ª–∞–≤–Ω—ã–π */}
        <SwiperSlide className="relative bg-gradient-to-b from-blue-900 to-cyan-900 flex items-center">
          <div className="container mx-auto h-full flex flex-col items-center px-4 py-12">
            <div className="w-full max-w-6xl mx-auto text-center">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <h1 className="text-3xl xs:text-4xl sm:text-5xl md:text-6xl font-bold uppercase mb-6 text-white">
                –ë–£–†–ï–ù–ò–ï –°–ö–í–ê–ñ–ò–ù –í –†–ï–°–ü–£–ë–õ–ò–ö–ï –ö–ê–†–ï–õ–ò–Ø
                <span className="block text-lg xs:text-xl sm:text-2xl md:text-3xl font-normal mt-3">
                  –° –ì–ê–†–ê–ù–¢–ò–ï–ô 10 –õ–ï–¢
                </span>
              </h1>

              {/* –ú–æ–±–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç */}
              <div className="md:hidden space-y-6 mb-8">
                {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
                {[
                  '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç "–ø–æ–¥ –∫–ª—é—á"',
                  '–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
                  '–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã'
                ].map((item, i) => (
                  <div
                    key={i}
                    className="bg-white/10 p-4 rounded-xl backdrop-blur-sm flex items-center gap-3"
                  >
                    <FiCheckCircle className="text-2xl text-[#218CE9] flex-shrink-0" />
                    <span className="text-lg text-white/90">{item}</span>
                  </div>
                ))}

                {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≥–æ—Ä–æ–¥–æ–≤ */}
                <div className="bg-white/5 p-6 rounded-2xl backdrop-blur-sm">
                  <h2 className="text-xl font-bold text-white mb-4 text-center">
                    –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã:
                  </h2>
                  <div className="overflow-hidden">
                    <div className="flex animate-infinite-scroll">
                      {[...cities, ...cities].map((city, i) => (
                        <div
                          key={i}
                          className="bg-white/10 px-4 py-2 rounded-lg text-white/90 text-sm flex-shrink-0 mr-2"
                        >
                          {city}
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
                <button
                  onClick={scrollToForm}
                  className="w-full bg-[#218CE9] text-white py-3 rounded-full font-bold hover:bg-[#1a6fb9] flex items-center justify-center gap-2"
                >
                  <FiArrowDown className="animate-bounce" />
                  –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </button>
              </div>

              {/* Desktop –≤–∞—Ä–∏–∞–Ω—Ç */}
              <div className="hidden md:grid md:grid-cols-2 gap-8 mb-8">
                {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
                <div className="space-y-6">
                  <div className="space-y-4">
                    {[
                      '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç "–ø–æ–¥ –∫–ª—é—á"',
                      '–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
                      '–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã'
                    ].map((item, i) => (
                      <div
                        key={i}
                        className="bg-white/10 p-4 rounded-xl backdrop-blur-sm flex items-center gap-3"
                      >
                        <FiCheckCircle className="text-2xl text-[#218CE9] flex-shrink-0" />
                        <span className="text-lg text-white/90">{item}</span>
                      </div>
                    ))}
                  </div>

                  <div className="grid grid-cols-3 gap-3 text-center">
                    {[
                      { value: '15+', label: '–ª–µ—Ç –æ–ø—ã—Ç–∞' },
                      { value: '1,200+', label: '—Å–∫–≤–∞–∂–∏–Ω –ø—Ä–æ–±—É—Ä–µ–Ω–æ' },
                      { value: '98%', label: '—Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç –Ω–∞—Å' }
                    ].map((item, i) => (
                      <div key={i} className="bg-white/10 p-4 rounded-xl">
                        <div className="text-2xl font-bold text-[#218CE9]">{item.value}</div>
                        <div className="text-sm text-white/80 mt-1">{item.label}</div>
                      </div>
                    ))}
                  </div>

                  <button
                    onClick={scrollToForm}
                    className="bg-[#218CE9] hover:bg-[#1666b3] text-white px-8 py-4 rounded-full 
                       w-full flex items-center justify-center gap-2 text-lg font-semibold
                       transition-all duration-300"
                  >
                    <FiArrowDown className="text-xl animate-bounce" />
                    –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫
                  </button>
                </div>

                {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
                <div className="bg-white/5 p-6 rounded-2xl backdrop-blur-sm">
                  <h2 className="text-xl font-bold text-white mb-4 text-center">
                    –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã:
                  </h2>
                  <div className="flex flex-wrap gap-2 max-h-[400px] overflow-y-auto">
                    {cities.map((city, i) => (
                      <div
                        key={i}
                        className="bg-white/10 px-4 py-2 rounded-lg text-white/90 text-sm"
                      >
                        {city}
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </SwiperSlide>


        {/* –°–ª–∞–π–¥ 2: –£—Å–ª—É–≥–∏ */}
        <SwiperSlide className="relative bg-gradient-to-br from-[#218CE9] to-cyan-400">
          <div className="absolute inset-0 opacity-15 z-0">
            <svg viewBox="0 0 500 200" className="w-full h-full" preserveAspectRatio="none">
              <path fill="currentColor" d="M0 120 Q 125 60 250 120 T 500 120 L500 0 0 0" className="text-white">
                <animate
                  attributeName="d"
                  dur="15s"
                  repeatCount="indefinite"
                  values="
            M0 120 Q 125 60 250 120 T 500 120 L500 0 0 0;
            M0 120 Q 125 180 250 120 T 500 120 L500 0 0 0;
            M0 120 Q 125 60 250 120 T 500 120 L500 0 0 0
          "
                />
              </path>
            </svg>
          </div>
          <div className="container mx-auto px-4 h-full flex items-center relative z-10">
            <div className="w-full h-[80vh] flex flex-col">
              <div className="space-y-4 md:space-y-8">
                <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold text-center text-white drop-shadow-lg">
                  –ù–∞—à–∏ –∫–ª—é—á–µ–≤—ã–µ —É—Å–ª—É–≥–∏
                  <div className="mt-2 md:mt-4 text-lg md:text-xl lg:text-2xl font-light opacity-90">
                    –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞
                  </div>
                </h2>
              </div>

              <div className="flex-1 overflow-y-auto pb-8 mt-4">
                <div className="grid grid-cols-1 xs:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 md:gap-4 lg:gap-6 px-2">
                  {[
                    {
                      icon: '‚õèÔ∏è',
                      title: '–ë—É—Ä–µ–Ω–∏–µ —Å–∫–≤–∞–∂–∏–Ω',
                      items: [
                        '–ë—É—Ä–µ–Ω–∏–µ –Ω–∞ –ø–µ—Å—á–∞–Ω—ã–π/–≥—Ä–∞–≤–∏–π–Ω–æ-–≥–∞–ª–µ—á–Ω—ã–π –≥—Ä—É–Ω—Ç',
                        '–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-–≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–∑—ã—Å–∫–∞–Ω–∏—è',
                        '–†–µ–º–æ–Ω—Ç –∞–≤–∞—Ä–∏–π–Ω—ã—Ö —Å–∫–≤–∞–∂–∏–Ω',
                        '–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Å–∞–º–æ–∏–∑–ª–∏–≤–∞'
                      ],
                      accent: 'bg-blue-100'
                    },
                    {
                      icon: '‚öôÔ∏è',
                      title: '–û–±—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å–∫–≤–∞–∂–∏–Ω',
                      items: [
                        '–ü–æ–¥–±–æ—Ä –∏ –º–æ–Ω—Ç–∞–∂ –Ω–∞—Å–æ—Å–æ–≤',
                        '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–µ—Å—Å–æ–Ω–æ–≤',
                        '–ü—Ä–æ–∫–ª–∞–¥–∫–∞ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π',
                        '–ú–æ–Ω—Ç–∞–∂ –≤–æ–¥–æ–ø—Ä–∏–µ–º–Ω–æ–≥–æ —É–∑–ª–∞'
                      ],
                      accent: 'bg-blue-100'
                    },
                    {
                      icon: 'üíß',
                      title: '–í–æ–¥–æ–æ—á–∏—Å—Ç–∫–∞',
                      items: [
                        '–•–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤–æ–¥—ã',
                        '–ü–æ–¥–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                        '–ú–æ–Ω—Ç–∞–∂ –∏ –Ω–∞–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º',
                        '–°–µ—Ä–≤–∏—Å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ'
                      ],
                      accent: 'bg-blue-100'
                    },
                    {
                      icon: 'üöΩ',
                      title: '–ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è',
                      items: [
                        '–ê–Ω–∞–ª–∏–∑ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏',
                        '–ü–æ–¥–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                        '–ú–æ–Ω—Ç–∞–∂ –æ—á–∏—Å—Ç–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π',
                        '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º'
                      ],
                      accent: 'bg-blue-100'
                    }
                  ].map((service, index) => (
                    <div
                      key={index}
                      className="group p-4 md:p-6 bg-white rounded-xl md:rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border-2 border-white/20 relative overflow-hidden"
                    >
                      <div className={`absolute top-0 left-0 w-full h-1.5 md:h-2 ${service.accent}`}></div>
                      <div className="mt-2">
                        <div className={`mb-3 md:mb-4 p-2 md:p-3 rounded-lg ${service.accent} inline-block shadow-sm md:shadow-md`}>
                          <span className="text-3xl md:text-4xl text-[#218CE9]">{service.icon}</span>
                        </div>
                        <h3 className="text-lg md:text-xl font-bold text-gray-800 mb-2 md:mb-3">
                          {service.title}
                        </h3>
                        <ul className="space-y-1 md:space-y-2 text-gray-600">
                          {service.items.map((item, i) => (
                            <li key={i} className="flex items-start gap-2 text-xs md:text-sm leading-4 md:leading-5">
                              <span className="text-[#218CE9] text-base mt-0.5">‚Ä¢</span>
                              {item}
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </SwiperSlide>

        {/* –°–ª–∞–π–¥ 3: –ì–∞–ª–µ—Ä–µ—è */}
        <SwiperSlide className="relative bg-gradient-to-br from-blue-50 to-cyan-50 min-h-screen">
          <div className="container mx-auto h-full flex flex-col justify-center py-8">
            <div className="text-center mb-6 px-4">
              <h2 className="text-3xl font-bold text-[#218CE9] mb-2">–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</h2>
              <p className="text-gray-600 text-base max-w-md mx-auto">
                –ë–æ–ª–µ–µ 1200 —É—Å–ø–µ—à–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–µ
              </p>
            </div>
            <div className="flex-1 overflow-y-auto px-4">
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                {[1, 2, 3, 4, 5, 6].map((item) => (
                  <div key={item} className="relative aspect-square bg-white rounded-lg shadow-md overflow-hidden">
                    <Image
                      src={`/images/${item}.jpg`}
                      alt={`–ü—Ä–æ–µ–∫—Ç ${item}`}
                      width={400}
                      height={400}
                      className="object-cover w-full h-full"
                    />
                    <div className="absolute bottom-0 left-0 right-0 bg-white/90 p-3">
                      <h3 className="text-[#218CE9] font-bold text-sm truncate">–°–∫–≤–∞–∂–∏–Ω–∞ ‚Ññ{item}</h3>
                      <p className="text-gray-600 text-xs">–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª. | {120 + item * 10}–º</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
            <div className="text-center pt-6 sticky bottom-4 z-10">
              <button className="bg-[#218CE9] text-white px-8 py-3 rounded-full hover:bg-[#1a6fb9] transition-colors">
                –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
              </button>
            </div>
          </div>
        </SwiperSlide>
      </Swiper>
    </div>
  )
}

export default FullscreenSlider
